# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python and Rust application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env: 
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
    - uses: actions/checkout@v3
    - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
    - run: cargo build --verbose
    - run: cargo test --verbose
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
    - name: Set up Rust
      uses: actions/setup-rust@v1
      with:
        profile: minimal
        default-version: "1.69.0"
    - name: Build Rust libraries
      run: |
        cd rust_lib/dnd_lib
        cargo build --release
        cd ../..
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest discover -s DnD_Tests -p "*_test.py"
